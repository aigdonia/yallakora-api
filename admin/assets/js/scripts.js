!function(){"use strict";function runApp($rootScope){function keepSiteTitleUpdated(e,toState,toParams,fromState){}$rootScope.$on("$stateChangeStart",keepSiteTitleUpdated),$rootScope.loadingUser=!1}angular.module("yallakora-admin",["ngSanitize","ui.router","ui.bootstrap","angular-ladda","angular-sweetalert","ui.select2","urlFilter","ngFileUpload","ui.sortable"]).run(runApp),runApp.$inject=["$rootScope"]}(),function(){"use strict";function configureApp($urlRouterProvider,$httpProvider,laddaProvider){$urlRouterProvider.otherwise("/"),laddaProvider.setOption({style:"slide-down"});var baseURL="http://localhost:3002";$httpProvider.interceptors.push(function($q){return{request:function(config){return 0===config.url.indexOf("/")&&(config.url=baseURL+config.url),config}}})}angular.module("yallakora-admin").config(configureApp),configureApp.$inject=["$urlRouterProvider","$httpProvider","laddaProvider"]}(),function(){"use strict";function shortyNumbersFilter(){return function(number){if(number<0)return"na";var integerNumber=_.round(number),text=integerNumber.toString();return _.floor(number/1e6)>0?text=_.floor(number/1e6).toString()+"M":_.floor(number/1e3)>0&&(text=_.floor(number/1e3).toString()+"K"),text}}angular.module("yallakora-admin").filter("shortyNumbers",shortyNumbersFilter)}(),function(){"usr strict";angular.module("urlFilter",[]).filter("url",function(){return function(text){return _.startsWith(text,"htt")?"<a href='"+text+"' title='Stream URL'>"+text+"</a>":text}})}(),function(){"use strict";function ChannelsController(ChannelsService,swal){var vm=this;vm.sortableOpts={axis:"y",change:function(e,ui){(!vm.originalChannelsList||vm.originalChannelsList.length<=0)&&(vm.originalChannelsList=vm.channelsList)}},ChannelsService.listAllChannels().then(function(channels){vm.channelsList=channels}),vm.createNewChannel=function(){ChannelsService.createNewChannel(vm.newChannelName).then(function(newChannel){vm.channelsList.push(newChannel),vm.newChannelName=""})},vm.deleteChannel=function(channel){swal({title:"Delete Channel?",text:'Are you sure you want to delete "'+channel.title+'"!',type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#aaa",confirmButtonText:"Yes, delete it!"}).then(function(){ChannelsService.deleteChannel(channel.name).then(function(channel){_.remove(vm.channelsList,function(_ch){return channel.name===_ch.name}),swal({title:channel.name+" Deleted",type:"success"})}).catch(function(error){swal({title:"Failed",text:"Cant be Deleted",type:"error"})})})},vm.updateSortedChannels=function(){vm.originalChannelsList=[],ChannelsService.sortChannels(_.reduce(vm.channelsList,function(list,e,order){return list[e.name]=order,list},{}))}}angular.module("yallakora-admin").controller("ChannelsController",ChannelsController),ChannelsController.$inject=["ChannelsService","swal"]}(),function(){"use strict";function ChannelsService($q,$http){return this.listAllChannels=function(){var defer=$q.defer();return $http.get("/channels").then(function(response){defer.resolve(response.data)}),defer.promise},this.createNewChannel=function(channelName){console.log(channelName);var defer=$q.defer();return $http.post("/channels",{name:channelName}).then(function(response){defer.resolve(response.data.channel)},function(response){defer.reject(response.data)}),defer.promise},this.getChannelDetails=function(channelID){var defer=$q.defer();return $http.get("/channels/"+channelID).then(function(response){defer.resolve(response.data)}),defer.promise},this.deleteChannel=function(channelID){var defer=$q.defer();return $http.post("/channels/"+channelID+"/remove").then(function(response){defer.resolve(response.data.channel)},function(error){defer.reject(error)}),defer.promise},this.sortChannels=function(sortedChannels){$http.patch("/channels/sort",{channels:sortedChannels}).then(function(response){console.log(response.data)})},this}angular.module("yallakora-admin").factory("ChannelsService",ChannelsService),ChannelsService.$inject=["$q","$http"]}(),function(){"use strict";function routes($stateProvider){$stateProvider.state("cast",{url:"/",templateUrl:"modules/cast/home.html",controller:"ChannelsController as ctrl"}).state("channel",{url:"channel/:channel_id",parent:"cast",templateUrl:"modules/cast/channel.html",controller:"SingleChannelController as ctrl"})}angular.module("yallakora-admin").config(routes),routes.$inject=["$stateProvider"]}(),function(){"use strict";function StreamServersFactory($q,$http){return this.getAllServers=function(){var defer=$q.defer();return $http.get("/servers").then(function(response){defer.resolve(response.data.servers)}),defer.promise},this.createServer=function(server){var defer=$q.defer();return $http.post("/server",server).then(function(response){defer.resolve(response.data.server)}),defer.promise},this.updateServerEmbdedCode=function(server){var defer=$q.defer();return $http.put("/server/"+server.id,{embded_pattern:server.embded_pattern}).then(function(response){defer.resolve(response.data.server)}),defer.promise},this.deleteServer=function(stream){var defer=$q.defer();return $http.post("/server/"+stream.id+"/remove").then(function(response){defer.resolve(response.data.server)},function(error){defer.reject(error)}),defer.promise},this}angular.module("yallakora-admin").factory("StreamServers",StreamServersFactory),StreamServersFactory.$inject=["$q","$http"]}(),function(){"use strict";function SingleChannelController($stateParams,swal,$uibModal,$log,Upload,ChannelsService,StreamServers,Stream){var vm=this,getCheckedStreamsIDs=function(){return _.reduce(vm.channelStreams,function(coll,stream){return stream.checked&&coll.push(stream.id),coll},[])};ChannelsService.getChannelDetails($stateParams.channel_id).then(function(channelDetails){vm.channelDetails=channelDetails.data,vm.channelStreams=_.sortBy(channelDetails.streams,["status"])}),vm.sortableOpts={axis:"y",update:function(e,ui){Stream.sortStreams(_.reduce(vm.channelStreams,function(list,e,order){return list[e.id]=order,list},{}))}},vm.newStreamWizard=function(){var modalInstance=$uibModal.open({animation:!1,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"modules/cast/new-stream-modal.html",controller:"StreamModalController",controllerAs:"ctrl",resolve:{channel:function(){return vm.channelDetails},qualities:function(){return Stream.getQualities().then(function(qualities){return qualities})},serversList:function(){return StreamServers.getAllServers().then(function(servers){return servers})},streamTags:function(){return Stream.getStreamTags().then(function(tags){return tags})}}});modalInstance.result.then(function(newStream){vm.channelStreams.push(newStream)},function(){$log.info("Modal dismissed at: "+new Date)})},vm.activateStream=function(stream){Stream.updateStream(stream.id,{status:"active"}).then(function(newStream){stream.status=newStream.status,swal({title:"Stream Activate",text:"This stream is now available for public viewers",type:"success",timer:1e3})})},vm.deactivateStream=function(stream){swal({title:"Deactivate Stream!",text:"Are you sure? This will hide it from public viewers",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Deactivate"}).then(function(){Stream.updateStream(stream.id,{status:"idle"}).then(function(newStream){stream.status=newStream.status})})},vm.enableEdit=function(stream){stream.enableEdit=!0},vm.updateStreamChannel=function(stream){Stream.updateStream(stream.id,{server_channel:stream.server_channel}).then(function(newStream){stream.server_channel=newStream.server_channel,swal({title:"Stream Channel Changed",text:"Stream Channel is updated",type:"success",timer:1e3}),stream.enableEdit=!1})},vm.deleteStream=function(stream){swal({title:"Remove Stream!",text:"This will delete the stream and can't UNDO",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Delete"}).then(function(){Stream.deleteStream(stream).then(function(deletedStream){_.remove(vm.channelStreams,function(s){return s.id===deletedStream.id})})})},vm.updateLogo=function(file){Upload.upload({url:"/channels/"+vm.channelDetails.name+"/logo",method:"POST",data:{file:file},headers:{"Access-Control-Request-Headers":"content-type"}}).then(function(response){})},vm.url=function(stream){return _.replace(stream.server.embded_pattern,"{CH}",stream.server_channel).replace("{W}","500").replace("{H}","400")},vm.checkAllStreams=function(checked){checked?_.forEach(vm.channelStreams,function(stream){stream.checked=!0}):vm.DeselectAll()},vm.checkStreamsByTag=function(tag){vm.DeselectAll(),_.filter(vm.channelStreams,["tag",tag]).forEach(function(stream){stream.checked=!0})},vm.DeselectAll=function(){_.forEach(vm.channelStreams,function(stream){stream.checked=!1})},vm.patchActivate=function(){var ids=getCheckedStreamsIDs();Stream.patchStreamStatus(ids,"active").then(function(streams){_.forEach(streams,function(stream){var index=_.find(vm.channelStreams,["id",stream.id]);index.status="active"}),vm.DeselectAll()})},vm.patchDeactivate=function(){var ids=getCheckedStreamsIDs();Stream.patchStreamStatus(ids,"idle").then(function(streams){_.forEach(streams,function(stream){var index=_.find(vm.channelStreams,["id",stream.id]);index.status="idle"}),vm.DeselectAll()})},vm.patchDelete=function(){var ids=getCheckedStreamsIDs();Stream.patchDeleteStreams(ids).then(function(streams){_.forEach(streams,function(stream){_.remove(vm.channelStreams,function(s){return s.id===stream.id})}),vm.DeselectAll()})},vm.updateSEO=function(){Stream.updateSEO(vm.channelDetails).then(function(){vm.seoChanged=!1})}}function StreamModalController($uibModalInstance,channel,qualities,serversList,streamTags,Stream){var vm=this;vm.channelName=channel.title,vm.serversList=serversList,vm.qualityList=qualities,vm.streamTagList=streamTags,vm.newStream={},vm.createStream=function(){vm.newStream.quality=vm.quality.title,vm.tag&&(vm.newStream.tag=vm.tag),Stream.createStream(channel.name,vm.newStream).then(function(stream){$uibModalInstance.close(stream)})},vm.updateTitleOnQualityChange=function(){vm.quality=JSON.parse(vm.quality),vm.newStream.title=vm.quality.meta.label}}angular.module("yallakora-admin").controller("SingleChannelController",SingleChannelController).controller("StreamModalController",StreamModalController),SingleChannelController.$inject=["$stateParams","swal","$uibModal","$log","Upload","ChannelsService","StreamServers","Stream"],StreamModalController.$inject=["$uibModalInstance","channel","qualities","serversList","streamTags","Stream"]}(),function(){"use strict";function StreamService($http,$q){return this.createStream=function(channel_id,attributes){console.log(attributes);var defer=$q.defer(),newStream={title:attributes.title,quality:attributes.quality};return _.has(attributes,"stream_url")?newStream.url=attributes.stream_url:(newStream.server=attributes.server_id,newStream.channel=attributes.channel_id),_.has(attributes,"tag")&&(newStream.tag=attributes.tag),$http.post("/channels/"+channel_id+"/stream",newStream).then(function(response){defer.resolve(response.data.stream)}),defer.promise},this.updateStream=function(stream_id,updates){var defer=$q.defer();return $http.post("/streams/"+stream_id,updates).then(function(response){defer.resolve(response.data)},function(error){defer.reject(error)}),defer.promise},this.getQualities=function(){var defer=$q.defer();return $http.get("/lookups/quality").then(function(response){return defer.resolve(response.data.lookups)}),defer.promise},this.getStreamTags=function(){var defer=$q.defer();return $http.get("/lookups/stream_tag").then(function(response){return defer.resolve(response.data.lookups)}),defer.promise},this.deleteStream=function(stream){var defer=$q.defer();return $http.post("/streams/"+stream.id+"/remove").then(function(response){defer.resolve(response.data.stream)},function(error){defer.reject(error)}),defer.promise},this.sortStreams=function(streams){$http.patch("/streams/sort",{streams:streams}).then(function(response){console.log(response.data)})},this.patchStreamStatus=function(streamsIDs,status){var defer=$q.defer();return $http.patch("/streams/status",{streams:streamsIDs,status:status}).then(function(response){defer.resolve(response.data.streams)},function(error){defer.reject(error)}),defer.promise},this.patchMoveStreams=function(streamsIDs,targetChannelID){var defer=$q.defer();return $http.patch("/streams/move",{streams:streamsIDs,channel_id:targetChannelID}).then(function(response){},function(error){}),defer.promise},this.patchDeleteStreams=function(streamIDs){var defer=$q.defer();return $http.patch("/streams/remove",{streams:streamIDs}).then(function(response){defer.resolve(response.data.streams)},function(error){defer.reject(error)}),defer.promise},this.updateSEO=function(data){return $http.post("/channels/"+data.name+"/seo",{desc:data.seo_desc,keywords:data.seo_keywords})},this}angular.module("yallakora-admin").factory("Stream",StreamService),StreamService.$inject=["$http","$q"]}(),function(){"use strict";function StreamsController(){}angular.module("yallakora-admin").controller("StreamsController",StreamsController)}(),function(){"use strict";function routes($stateProvider){$stateProvider.state("servers",{url:"/servers",templateUrl:"modules/servers/home.html",controller:"ServersController as ctrl"})}angular.module("yallakora-admin").config(routes),routes.$inject=["$stateProvider"]}(),function(){"use strict";function ServersController(StreamServers,swal){function loadEditForm(server){vm.streamServer=server,vm.streamServer.exist=!0}var vm=this;StreamServers.getAllServers().then(function(servers){vm.servers=servers}),vm.setCurrentServer=function(server){vm.pickedServer=server,loadEditForm(server),console.log(server)},vm.saveStreamServer=function(){vm.streamServer.exist?StreamServers.updateServerEmbdedCode(vm.streamServer).then(function(server){vm.servers.push(server),vm.streamServer={},swal({title:"Server Updates",text:"Server Updated Successfully",type:"success",timer:1e3})}):StreamServers.createServer(vm.streamServer).then(function(server){vm.servers.push(server),vm.streamServer={},swal({title:"Server Created",text:"Server Added Successfully",type:"success",timer:1e3})})},vm.deleteServer=function(server){swal({title:"Remove Server!",text:"This will delete the server and can't UNDO",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Delete"}).then(function(){StreamServers.deleteServer(server).then(function(ser){_.remove(vm.servers,function(s){return console.log(s,ser),s.id==ser.id})})})}}angular.module("yallakora-admin").controller("ServersController",ServersController),ServersController.$inject=["StreamServers","swal"]}(),function(){"use strict";function SettingsLookupsController(Lookups,swal,$stateParams){var $lookups={quality:{meta:{label:"text"}},stream_tag:{}},vm=this;vm.lookup=$lookups[$stateParams.category],vm.newLookup={},Lookups.getLookupByCategory($stateParams.category).then(function(lookups){vm.lookupsList=lookups,console.log(lookups)}),vm.createNewLookup=function(){Lookups.createLookup($stateParams.category,vm.newLookup).then(function(lookup){vm.lookupsList.push(lookup),vm.newLookup={}})},vm.deleteLookup=function(lookup){swal({title:"Delete "+lookup.title+"?",text:'Are you sure you want to delete "'+lookup.title+'"!',type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#aaa",confirmButtonText:"Yes, delete it!"}).then(function(){Lookups.deleteLookup(lookup.id).then(function(lookup){_.remove(vm.lookupsList,function(_lkp){return lookup.id===_lkp.id}),swal({title:lookup.title+" Deleted",type:"success"})}).catch(function(error){swal({title:"Failed",text:"Cant be Deleted",type:"error"})})})}}angular.module("yallakora-admin").controller("SettingsLookupsController",SettingsLookupsController),SettingsLookupsController.$inject=["Lookups","swal","$stateParams"]}(),function(){"use strict";function LookupsService($http,$q){return this.createLookup=function(category,lookup){var defer=$q.defer();return $http.post("/lookups/"+category,lookup).then(function(response){defer.resolve(response.data.lookup)}),defer.promise},this.updateLookup=function(stream_id,updates){var defer=$q.defer();return defer.promise},this.getLookupByCategory=function(category){var defer=$q.defer();return $http.get("/lookups/"+category).then(function(response){return defer.resolve(response.data.lookups)}),defer.promise},this.deleteLookup=function(lookupId){var defer=$q.defer();return $http.post("/lookups/"+lookupId+"/remove").then(function(response){return defer.resolve(response.data.lookup)},function(error){defer.reject(error)}),defer.promise},this}angular.module("yallakora-admin").factory("Lookups",LookupsService),LookupsService.$inject=["$http","$q"]}(),function(){"use strict";function routes($stateProvider){$stateProvider.state("settings",{url:"/settings",templateUrl:"modules/settings/index.html",absolute:!0}).state("lookup",{url:"/:category",templateUrl:"modules/settings/lookups.html",parent:"settings",controller:"SettingsLookupsController as ctrl"})}angular.module("yallakora-admin").config(routes),routes.$inject=["$stateProvider"]}(),function(){"use strict";function routes($stateProvider){$stateProvider.state("users",{url:"/users",templateUrl:"modules/users/home.html"})}angular.module("yallakora-admin").config(routes),routes.$inject=["$stateProvider"]}(),function(){"use strict";function UsersController(){var vm=this;vm.usersList=[{id:1,email:"aigdonia@gmail.com"},{id:2,email:"aigdonia@gmail.com"},{id:3,email:"aigdonia@gmail.com"},{id:4,email:"aigdonia@gmail.com"}]}angular.module("yallakora-admin").controller("UsersController",UsersController),UsersController.$inject=[]}(),angular.module("yallakora-admin").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("modules/cast/channel.html",'<div class="panel panel-default channel-title-panel"><div class="panel-body"><div ng-class="{&quot;hydrated&quot;:!!ctrl.channelDetails.logo}" ng-model="ctrl.logo" name="logo" ngf-pattern="\'image/png\'" ngf-accept="\'image/png\'" ngf-max-size="1MB" ngf-min-height="100" ngf-drag-over-class="\'dragover\'" ngf-resize="{height: 100}" ngf-select="ctrl.updateLogo($file)" ngf-drop="ctrl.updateLogo($file)" ngf-thumbnail="ctrl.logo || \'/thumb.jpg\'" ngf-as-background="true" class="uploader"><span ng-if="!(ctrl.channelDetails.logo || ctrl.logo)">Select Logo</span><img ng-if="!!ctrl.channelDetails.logo &amp;&amp; !ctrl.logo" ng-src="{{ctrl.channelDetails.logo}}"></div><h1 ng-bind="::ctrl.channelDetails.title"></h1></div></div><div class="panel panel-default"><div class="panel-heading"><span>SEO Options</span><div class="pull-right"><div ng-click="ctrl.updateSEO()" ng-disabled="!ctrl.seoChanged" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-floppy-disk"></i></div></div></div><div class="panel-body"><form><div class="control-group"><textarea placeholder="Description" ng-model="ctrl.channelDetails.seo_desc" ng-change="ctrl.seoChanged = true" class="form-control"></textarea></div><br><div class="control-group"><textarea placeholder="Keywords (comma-separated)" ng-model="ctrl.channelDetails.seo_keywords" class="form-control"></textarea></div></form></div></div><div ng-if="ctrl.channelStreams.length &lt;= 0" class="well well-lg"><p>No Streams Here Yet create one now!</p><button ng-click="ctrl.newStreamWizard()" class="btn btn-primary">Create Stream</button></div><div ng-if="ctrl.channelStreams.length &gt; 0" class="panel panel-default"><div class="panel-body"><div class="col-md-6"><div class="btn-toolbar"><div class="btn-group"><button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-default dropdown-toggle">Tags <span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button><ul class="dropdown-menu"><li><a ng-click="ctrl.checkStreamsByTag(&quot;server1&quot;)">server1</a></li><li><a ng-click="ctrl.checkStreamsByTag(&quot;server2&quot;)">server2</a></li></ul></div><div role="group" class="btn-group"><button ng-click="ctrl.DeselectAll()" class="btn btn-primary">Deselect</button></div></div></div><div class="col-md-6"><div class="btn-toolbar pull-right"><div class="btn-group"><button type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-default dropdown-toggle">Actions <span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button><ul class="dropdown-menu"><li><a ng-click="ctrl.patchActivate()">Activate All</a></li><li><a ng-click="ctrl.patchDeactivate()">Deactivate All</a></li><li class="divider"></li><li><a href="#">Move To..</a></li><li class="divider"></li><li><a ng-click="ctrl.patchDelete()" class="text-danger">Delete</a></li></ul></div></div></div></div></div><div ng-if="ctrl.channelStreams.length &gt; 0" class="panel panel-default"><div class="panel-heading"><span>Streams</span><div class="pull-right"><div ng-click="ctrl.newStreamWizard()" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-plus"></i></div></div></div><table class="table table-condensed streams"><thead><tr><th><input type="checkbox" ng-change="ctrl.checkAllStreams(chkall)" ng-model="chkall"></th><th>Title</th><th>Quality</th><th>Status</th><th>Server</th><th>Channel ID</th><th></th></tr></thead><tbody ui-sortable="ctrl.sortableOpts" ng-model="ctrl.channelStreams"><tr ng-repeat="stream in ctrl.channelStreams" ng-class="{\'selected\':!!stream.checked, \'warning\':(stream.status==\'idle\'), \'danger\':(stream.status==\'blocked\')}"><td><input type="checkbox" ng-model="stream.checked"></td><td> {{::stream.title}} <div ng-if="!!stream.tag" class="label label-success">{{::stream.tag}}</div></td><td>{{::stream.quality}}</td><td> <div ng-class="{\'label-success\':stream.status===\'active\',\'label-danger\':stream.status==\'blocked\'}" class="label label-default">{{stream.status}}</div></td><td ng-bind="stream.server.name || &quot;NA&quot;"></td><td><div><form ng-submit="ctrl.updateStreamChannel(stream)"><div class="input-group"><input type="text" placeholder="Stream Channel" ng-model="stream.server_channel" ng-disabled="!stream.enableEdit" class="form-control"><span class="input-group-btn"><button type="button" ng-click="ctrl.enableEdit(stream)" ng-disabled="!!stream.enbleEdit" class="btn btn-default">Edit</button></span></div></form></div><span ng-if="!!stream.stream_url" ng-bind-html="stream.stream_url || &quot;NA&quot; | url"></span></td><td width="20%"><div class="btn-group"><a tooltip-placement="top" uib-tooltip="{{ctrl.url(stream)}}" href="{{ctrl.url(stream)}}" target="_blank" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-eye-open"></i></a><a ng-click="ctrl.deleteStream(stream)" class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-trash"></i></a></div><span> </span><div ng-hide="stream.status==&quot;blocked&quot;" class="btn-group"><a ng-if="stream.status==&quot;idle&quot;" ng-click="ctrl.activateStream(stream)" title="Make Public Channel" class="btn btn-sm btn-success"><i class="glyphicon glyphicon-play"></i></a><a ng-if="stream.status==&quot;active&quot;" ng-click="ctrl.deactivateStream(stream)" title="Make Private Channel" class="btn btn-sm btn-warning"><i class="glyphicon glyphicon-stop"></i></a></div></td></tr></tbody></table></div>'),$templateCache.put("modules/cast/channels.html",'<div ng-repeat="channel in ctrl.channelsList"><h3 ng-bind="::channel.name"></h3></div>'),$templateCache.put("modules/cast/home.html",'<div class="row"><div class="col-sm-3"><div class="panel panel-default"><div class="panel-heading">Channels</div><ul class="list-group"><li class="list-group-item channels-toolbar"><form ng-submit="ctrl.createNewChannel()"><div class="input-group"><input type="text" placeholder="New Channel Name" ng-model="ctrl.newChannelName" class="form-control"><div class="input-group-btn"><button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button></div></div></form><div ng-if="!!ctrl.originalChannelsList &amp;&amp; ctrl.originalChannelsList.length &gt; 0"><button ng-click="ctrl.updateSortedChannels()" class="btn btn-primary btn-sm center-block">Update Channels Order</button></div></li><div ui-sortable="ctrl.sortableOpts" ng-model="ctrl.channelsList"><li ng-repeat="channel in ctrl.channelsList" ui-sref-active="channel-item--active" class="list-group-item channel-item"><a ui-sref="channel({channel_id:channel.name})" class="channel-item__name"><img ng-if="!!channel.logo" alt="ChannelLogo" ng-src="{{channel.logo}}"><span ng-bind="::channel.title"></span></a><a ng-click="ctrl.deleteChannel(channel)" class="channel-item__delete"><i class="glyphicon glyphicon-remove"></i></a></li></div></ul></div></div><div ui-view="" class="col-sm-9"></div></div>'),$templateCache.put("modules/cast/new-stream-modal.html",'<div class="modal-header"><h3 id="modal-title" class="modal-title">Add New Stream</h3></div><div id="modal-body" class="modal-body"><p>Add New Stream for channel \'{{ctrl.channelName}}\'</p><form><div class="form-group"><input placeholder="Stream Channel ID" ng-model="ctrl.newStream.channel_id" class="form-control"></div><div class="form-group"><select ui-select2="{allowClear:true}" ng-model="ctrl.newStream.server_id" placeholder="Select Server or search by server name" ng-required="true"><option></option><option ng-repeat="server in ctrl.serversList" value="{{server.id}}">{{server.name}}</option></select></div><div class="form-group"><select ui-select2="{allowClear:true, placeholder:\'Select Quality\'}" ng-model="ctrl.quality" placeholder="Pick Channel Quality" ng-required="true" ng-change="ctrl.updateTitleOnQualityChange()"><option></option><option ng-repeat="quality in ctrl.qualityList" value="{{quality}}">{{quality.title}}</option></select></div><div class="form-group"><select ui-select2="{allowClear:true, placeholder:\'Select Quality\'}" ng-model="ctrl.tag" placeholder="Pick stream Tag (Optional)" ng-required="false"><option></option><option ng-repeat="tag in ctrl.streamTagList" value="{{tag.title}}">{{tag.title}}</option></select></div><div class="form-group"><input placeholder="Stream Title (720p(HD), Low Quality-140p)" ng-model="ctrl.newStream.title" class="form-control"></div></form></div><div class="modal-footer"><button type="button" ng-click="ctrl.createStream()" class="btn btn-primary">Add Stream</button></div>'),$templateCache.put("modules/servers/home.html",'<div class="container"><div class="row"><div class="col-md-7"><table class="table table-hover"><thead><tr><th>Server</th><th></th></tr></thead><tbody><tr ng-repeat="server in ctrl.servers" ng-class="{&quot;active&quot; : server.name == ctrl.pickedServer.name}"><td>{{server.name}}</td><td class="center"><div class="btn-group"><a title="Edit Stream Server" ng-click="ctrl.setCurrentServer(server)" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-edit"></i></a><a ng-click="ctrl.deleteServer(server)" class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-trash"></i></a></div></td></tr></tbody></table></div><div class="col-md-5 col-md-offset-0"><form ng-submit="ctrl.saveStreamServer()"><div class="panel panel-primary"><div class="panel-heading"><span>Streaming Server</span></div><div class="panel-body"><div class="form-group"><input placeholder="Server Name" ng-model="ctrl.streamServer.name" ng-disabled="ctrl.streamServer.exist" class="form-control input-lg"></div><div class="form-group"><textarea placeholder="Embded Code" ng-model="ctrl.streamServer.embded_pattern" class="form-control"></textarea><small class="help-block">use {C}, {W}, and {H} as placeholders for channel_id, width, and height respectivly</small></div></div><div class="panel-footer"><button class="btn btn-default">Save</button><button type="reset" class="btn btn-default">Reset</button></div></div></form></div></div></div>'),$templateCache.put("modules/settings/index.html",'<div class="container-fluid"><div class="row"><div class="col-md-2"><ul class="nav nav-pills nav-stacked"><li role="presentation" ui-sref="lookup({category: &quot;quality&quot;})"><a href="#">Stream Qualities</a></li><li role="presentation" ui-sref="lookup({category: &quot;stream_tag&quot;})"><a href="#">Stream Tags</a></li></ul></div><div ui-view="" class="col-md-10"></div></div></div>'),$templateCache.put("modules/settings/lookups.html",'<div class="row"><div class="col-md-7"><table class="table"><thead><tr><th>Title</th><th> </th></tr></thead><tbody><tr ng-repeat="lookup in ctrl.lookupsList"><td>{{::lookup.title}}</td><td><div class="btn-group"><a ng-click="ctrl.deleteLookup(lookup)" title="Remove Setting" class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-trash"></i></a></div></td></tr></tbody></table></div><div class="col-md-4"><div class="panel panel-success"><div class="panel-heading"><label>Add New</label></div><div class="panel-body"><form><div class="form-group"><label class="control-label">Title</label><input type="text" ng-model="ctrl.newLookup.title" class="form-control"></div><div ng-repeat="(title,type) in ctrl.lookup.meta" class="form-group"><label class="control-label">{{::title}}</label><input type="{{::type}}" ng-model="ctrl.newLookup.meta[title]" class="form-control"></div></form></div><div class="panel-footer"><button ng-click="ctrl.createNewLookup()" class="btn btn-primary">Add</button></div></div></div></div>'),$templateCache.put("modules/users/home.html",'<div class="container-fluid"><div class="row"><div class="col-md-offset-2 col-md-8"><div class="panel panel-default"><div class="panel-heading"><span>Users</span><div class="pull-right"><button class="btn btn-primary btn-sm">New User</button></div></div><div class="panel-body"><table class="table"><thead><tr><th> </th><th>User Email</th><th></th></tr></thead><tbody><tr><td><input type="checkbox"></td><td>aigdonia@gmail.com</td><td><center><div class="btn-group"><a disabled title="Update Password" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-lock"></i></a><a disabled class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-trash"></i></a></div></center></td></tr></tbody></table></div></div></div></div></div>')}]);